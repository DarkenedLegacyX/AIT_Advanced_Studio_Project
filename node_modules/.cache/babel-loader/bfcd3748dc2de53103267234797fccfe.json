{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\victo\\\\workspace\\\\final_stock_bot\\\\AIT_Advanced_Studio_Project\\\\src\\\\components\\\\pages\\\\IngredientPage\\\\Milk.js\";\nimport React, { useState, useEffect } from 'react';\nimport '../../../App.css';\nimport NavbarLoggedIn from '../../NavbarLoggedIn';\nimport './Ingredient.css';\nimport { LineChart, XAxis, Tooltip, Line, CartesianGrid, ResponsiveContainer } from 'recharts';\nconst data = [{\n  name: 'Page A',\n  uv: 4000,\n  pv: 2400,\n  amt: 2400\n}, {\n  name: 'Page B',\n  uv: 3000,\n  pv: 1398,\n  amt: 2210\n}, {\n  name: 'Page C',\n  uv: 2000,\n  pv: 9800,\n  amt: 2290\n}, {\n  name: 'Page D',\n  uv: 2780,\n  pv: 3908,\n  amt: 2000\n}, {\n  name: 'Page E',\n  uv: 1890,\n  pv: 4800,\n  amt: 2181\n}, {\n  name: 'Page F',\n  uv: 2390,\n  pv: 3800,\n  amt: 2500\n}, {\n  name: 'Page G',\n  uv: 3490,\n  pv: 4300,\n  amt: 2100\n}];\n\nfunction Milk() {\n  // const [currentTime, setCurrentTime] = useState(0);\n  // useEffect(() => {\n  //   fetch('http://localhost:5000/time').then(res => res.json()).then(data => {\n  //     setCurrentTime(data.time);\n  //   });\n  // }, []);\n  useEffect(() => {\n    fetch(\"/result\", {\n      method: \"POST\",\n      cache: \"no-cache\",\n      headers: {\n        \"content_type\": \"application/json\"\n      },\n      body: JSON.stringify(this.state.value)\n    }).then(response => {\n      return response.json();\n    }).then(json => {\n      this.setState({\n        playerName: json[0]\n      });\n    });\n  }, []); //   function mondayPredictio() {\n  //     var reference_object = prompt(\"reference_object\");\n  //     var prediction_object = prompt(\"prediction_object\");\n  //     var week_day = prompt(\"week_day\");\n  //     var quantity = prompt(\"quantity_product\");\n  //     let data = {\n  //         reference_object: reference_object,\n  //         prediction_object: prediction_object,\n  //         week_day: week_day,\n  //         product_quantity: quantity\n  //     };\n  //     var request = new Request('http://localhost:5000/linearMonday', {\n  //         method: 'POST',\n  //         headers: new Headers({ 'Content-Type': 'application/json' }),\n  //         //body: JSON.stringify(data)\n  //     });\n  //     //htmlrequest\n  //     fetch(request).then(function (response) {\n  //         response.json().then(function (data) {\n  //             console.log('helo');\n  //             console.log(data);\n  //         })\n  //     })\n  // };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(NavbarLoggedIn, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }\n  }, \"Milkity Milk Milk\"), /*#__PURE__*/React.createElement(ResponsiveContainer, {\n    width: \"99%\",\n    aspect: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(LineChart, {\n    width: 400,\n    height: 400,\n    data: data,\n    margin: {\n      top: 5,\n      right: 20,\n      left: 10,\n      bottom: 5\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(XAxis, {\n    dataKey: \"name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Tooltip, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(CartesianGrid, {\n    stroke: \"#f5f5f5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Line, {\n    type: \"monotone\",\n    dataKey: \"uv\",\n    stroke: \"#ff7300\",\n    yAxisId: 0,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Line, {\n    type: \"monotone\",\n    dataKey: \"pv\",\n    stroke: \"#387908\",\n    yAxisId: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 11\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"ingredinfo\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 9\n    }\n  }, \"In Stock\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 9\n    }\n  }, \"Current Amount: 30\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 9\n    }\n  }, \"Amount to order next time: 10\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 9\n    }\n  }, \"The current time is \", currentTime, \".\")), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 7\n    }\n  }));\n}\n\nexport default Milk;","map":{"version":3,"sources":["C:/Users/victo/workspace/final_stock_bot/AIT_Advanced_Studio_Project/src/components/pages/IngredientPage/Milk.js"],"names":["React","useState","useEffect","NavbarLoggedIn","LineChart","XAxis","Tooltip","Line","CartesianGrid","ResponsiveContainer","data","name","uv","pv","amt","Milk","fetch","method","cache","headers","body","JSON","stringify","state","value","then","response","json","setState","playerName","top","right","left","bottom","currentTime"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAO,kBAAP;AACA,OAAOC,cAAP,MAA2B,sBAA3B;AACA,OAAO,kBAAP;AACA,SAASC,SAAT,EAAoBC,KAApB,EAA2BC,OAA3B,EAAoCC,IAApC,EAA0CC,aAA1C,EAAyDC,mBAAzD,QAAoF,UAApF;AAEA,MAAMC,IAAI,GAAG,CACX;AACEC,EAAAA,IAAI,EAAE,QADR;AAEEC,EAAAA,EAAE,EAAE,IAFN;AAGEC,EAAAA,EAAE,EAAE,IAHN;AAIEC,EAAAA,GAAG,EAAE;AAJP,CADW,EAOX;AACEH,EAAAA,IAAI,EAAE,QADR;AAEEC,EAAAA,EAAE,EAAE,IAFN;AAGEC,EAAAA,EAAE,EAAE,IAHN;AAIEC,EAAAA,GAAG,EAAE;AAJP,CAPW,EAaX;AACEH,EAAAA,IAAI,EAAE,QADR;AAEEC,EAAAA,EAAE,EAAE,IAFN;AAGEC,EAAAA,EAAE,EAAE,IAHN;AAIEC,EAAAA,GAAG,EAAE;AAJP,CAbW,EAmBX;AACEH,EAAAA,IAAI,EAAE,QADR;AAEEC,EAAAA,EAAE,EAAE,IAFN;AAGEC,EAAAA,EAAE,EAAE,IAHN;AAIEC,EAAAA,GAAG,EAAE;AAJP,CAnBW,EAyBX;AACEH,EAAAA,IAAI,EAAE,QADR;AAEEC,EAAAA,EAAE,EAAE,IAFN;AAGEC,EAAAA,EAAE,EAAE,IAHN;AAIEC,EAAAA,GAAG,EAAE;AAJP,CAzBW,EA+BX;AACEH,EAAAA,IAAI,EAAE,QADR;AAEEC,EAAAA,EAAE,EAAE,IAFN;AAGEC,EAAAA,EAAE,EAAE,IAHN;AAIEC,EAAAA,GAAG,EAAE;AAJP,CA/BW,EAqCX;AACEH,EAAAA,IAAI,EAAE,QADR;AAEEC,EAAAA,EAAE,EAAE,IAFN;AAGEC,EAAAA,EAAE,EAAE,IAHN;AAIEC,EAAAA,GAAG,EAAE;AAJP,CArCW,CAAb;;AA6CA,SAASC,IAAT,GAAgB;AAEd;AAEA;AACA;AACA;AACA;AACA;AACAb,EAAAA,SAAS,CAAC,MAAM;AACdc,IAAAA,KAAK,CAAC,SAAD,EAAY;AACfC,MAAAA,MAAM,EAAE,MADO;AAEfC,MAAAA,KAAK,EAAE,UAFQ;AAGfC,MAAAA,OAAO,EAAE;AACP,wBAAgB;AADT,OAHM;AAMfC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe,KAAKC,KAAL,CAAWC,KAA1B;AANS,KAAZ,CAAL,CAQEC,IARF,CAQOC,QAAQ,IAAI;AAEjB,aAAOA,QAAQ,CAACC,IAAT,EAAP;AACD,KAXD,EAYGF,IAZH,CAYQE,IAAI,IAAI;AAEZ,WAAKC,QAAL,CAAc;AAAEC,QAAAA,UAAU,EAAEF,IAAI,CAAC,CAAD;AAAlB,OAAd;AACD,KAfH;AAgBD,GAjBQ,EAiBN,EAjBM,CAAT,CATc,CA4Bd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,sBACE,uDACE,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAFF,eAGE,oBAAC,mBAAD;AAAqB,IAAA,KAAK,EAAC,KAA3B;AAAiC,IAAA,MAAM,EAAE,CAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,SAAD;AACE,IAAA,KAAK,EAAE,GADT;AAEE,IAAA,MAAM,EAAE,GAFV;AAGE,IAAA,IAAI,EAAEjB,IAHR;AAIE,IAAA,MAAM,EAAE;AAAEoB,MAAAA,GAAG,EAAE,CAAP;AAAUC,MAAAA,KAAK,EAAE,EAAjB;AAAqBC,MAAAA,IAAI,EAAE,EAA3B;AAA+BC,MAAAA,MAAM,EAAE;AAAvC,KAJV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAME,oBAAC,KAAD;AAAO,IAAA,OAAO,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANF,eAOE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPF,eAQE,oBAAC,aAAD;AAAe,IAAA,MAAM,EAAC,SAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARF,eASE,oBAAC,IAAD;AAAM,IAAA,IAAI,EAAC,UAAX;AAAsB,IAAA,OAAO,EAAC,IAA9B;AAAmC,IAAA,MAAM,EAAC,SAA1C;AAAoD,IAAA,OAAO,EAAE,CAA7D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IATF,eAUE,oBAAC,IAAD;AAAM,IAAA,IAAI,EAAC,UAAX;AAAsB,IAAA,OAAO,EAAC,IAA9B;AAAmC,IAAA,MAAM,EAAC,SAA1C;AAAoD,IAAA,OAAO,EAAE,CAA7D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAVF,CADF,CAHF,eAiBE;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAFF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qCAHF,eAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BAAwBC,WAAxB,MAJF,CAjBF,eAuBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAvBF,CADF;AA6BD;;AACD,eAAenB,IAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport '../../../App.css';\r\nimport NavbarLoggedIn from '../../NavbarLoggedIn';\r\nimport './Ingredient.css'\r\nimport { LineChart, XAxis, Tooltip, Line, CartesianGrid, ResponsiveContainer } from 'recharts'\r\n\r\nconst data = [\r\n  {\r\n    name: 'Page A',\r\n    uv: 4000,\r\n    pv: 2400,\r\n    amt: 2400,\r\n  },\r\n  {\r\n    name: 'Page B',\r\n    uv: 3000,\r\n    pv: 1398,\r\n    amt: 2210,\r\n  },\r\n  {\r\n    name: 'Page C',\r\n    uv: 2000,\r\n    pv: 9800,\r\n    amt: 2290,\r\n  },\r\n  {\r\n    name: 'Page D',\r\n    uv: 2780,\r\n    pv: 3908,\r\n    amt: 2000,\r\n  },\r\n  {\r\n    name: 'Page E',\r\n    uv: 1890,\r\n    pv: 4800,\r\n    amt: 2181,\r\n  },\r\n  {\r\n    name: 'Page F',\r\n    uv: 2390,\r\n    pv: 3800,\r\n    amt: 2500,\r\n  },\r\n  {\r\n    name: 'Page G',\r\n    uv: 3490,\r\n    pv: 4300,\r\n    amt: 2100,\r\n  },\r\n];\r\n\r\nfunction Milk() {\r\n\r\n  // const [currentTime, setCurrentTime] = useState(0);\r\n\r\n  // useEffect(() => {\r\n  //   fetch('http://localhost:5000/time').then(res => res.json()).then(data => {\r\n  //     setCurrentTime(data.time);\r\n  //   });\r\n  // }, []);\r\n  useEffect(() => {\r\n    fetch(\"/result\", {\r\n      method: \"POST\",\r\n      cache: \"no-cache\",\r\n      headers: {\r\n        \"content_type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify(this.state.value)\r\n    }\r\n    ).then(response => {\r\n\r\n      return response.json()\r\n    })\r\n      .then(json => {\r\n\r\n        this.setState({ playerName: json[0] })\r\n      })\r\n  }, []);\r\n\r\n  //   function mondayPredictio() {\r\n  //     var reference_object = prompt(\"reference_object\");\r\n  //     var prediction_object = prompt(\"prediction_object\");\r\n  //     var week_day = prompt(\"week_day\");\r\n  //     var quantity = prompt(\"quantity_product\");\r\n  //     let data = {\r\n  //         reference_object: reference_object,\r\n  //         prediction_object: prediction_object,\r\n  //         week_day: week_day,\r\n  //         product_quantity: quantity\r\n  //     };\r\n  //     var request = new Request('http://localhost:5000/linearMonday', {\r\n  //         method: 'POST',\r\n  //         headers: new Headers({ 'Content-Type': 'application/json' }),\r\n  //         //body: JSON.stringify(data)\r\n  //     });\r\n  //     //htmlrequest\r\n  //     fetch(request).then(function (response) {\r\n  //         response.json().then(function (data) {\r\n  //             console.log('helo');\r\n  //             console.log(data);\r\n  //         })\r\n  //     })\r\n  // };\r\n\r\n  return (\r\n    <>\r\n      <NavbarLoggedIn />\r\n      <h1>Milkity Milk Milk</h1>\r\n      <ResponsiveContainer width=\"99%\" aspect={3}>\r\n        <LineChart\r\n          width={400}\r\n          height={400}\r\n          data={data}\r\n          margin={{ top: 5, right: 20, left: 10, bottom: 5 }}\r\n        >\r\n          <XAxis dataKey=\"name\" />\r\n          <Tooltip />\r\n          <CartesianGrid stroke=\"#f5f5f5\" />\r\n          <Line type=\"monotone\" dataKey=\"uv\" stroke=\"#ff7300\" yAxisId={0} />\r\n          <Line type=\"monotone\" dataKey=\"pv\" stroke=\"#387908\" yAxisId={1} />\r\n        </LineChart>\r\n      </ResponsiveContainer>\r\n      <div className='ingredinfo'>\r\n        <h1>In Stock</h1>\r\n        <p>Current Amount: 30</p>\r\n        <p>Amount to order next time: 10</p>\r\n        <p>The current time is {currentTime}.</p>\r\n      </div>\r\n      <div>\r\n\r\n      </div>\r\n    </>\r\n  );\r\n}\r\nexport default Milk;"]},"metadata":{},"sourceType":"module"}