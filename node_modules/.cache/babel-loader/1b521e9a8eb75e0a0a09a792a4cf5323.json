{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\victo\\\\workspace\\\\final_stock_bot\\\\AIT_Advanced_Studio_Project\\\\src\\\\components\\\\pages\\\\IngredientPage\\\\Cakes.js\";\nimport React, { useState, useEffect } from 'react';\nimport '../../../App.css';\nimport NavbarLoggedIn from '../../NavbarLoggedIn';\nimport { LineChart, XAxis, Tooltip, Line, CartesianGrid, ResponsiveContainer } from 'recharts';\n\nfunction Cakes() {\n  //const [currentTime, setCurrentTime] = useState(0);\n  const [predictedValue, setPredictedValue] = useState(0); // useEffect(() => {\n  //   fetch('http://localhost:5000/time').then(res => res.json()).then(data => {\n  //     setCurrentTime(data.time);\n  //   });\n  // }, []);\n\n  useEffect(() => {\n    addMilk();\n  }, []);\n\n  function addMilk() {\n    var coffee = prompt(\"number of cookies sold\");\n    let data = {\n      'Reference': 'coffee',\n      'Predict': 'cookies',\n      'RefSold': coffee\n    };\n    var request = new Request('http://localhost:5000/linearMonday', {\n      method: 'POST',\n      headers: new Headers({\n        'Content-Type': 'application/json'\n      }),\n      body: JSON.stringify(data)\n    }); //htmlrequest\n\n    fetch(request).then(function (response) {\n      response.json().then(function (data) {\n        console.log('helo');\n        console.log(data.completeAdd);\n        setPredictedValue(data.completeAdd);\n      });\n    });\n  }\n\n  ;\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(NavbarLoggedIn, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }\n  }, \"Milkity Milk Milk\", currentTime), /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }\n  }, \"Predicted Value: \", predictedValue), /*#__PURE__*/React.createElement(ResponsiveContainer, {\n    width: \"99%\",\n    aspect: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(LineChart, {\n    width: 400,\n    height: 400,\n    data: data,\n    margin: {\n      top: 5,\n      right: 20,\n      left: 10,\n      bottom: 5\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(XAxis, {\n    dataKey: \"name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(Tooltip, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(CartesianGrid, {\n    stroke: \"#f5f5f5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(Line, {\n    type: \"monotone\",\n    dataKey: \"uv\",\n    stroke: \"#ff7300\",\n    yAxisId: 0,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(Line, {\n    type: \"monotone\",\n    dataKey: \"pv\",\n    stroke: \"#387908\",\n    yAxisId: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 21\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"ingredinfo\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 17\n    }\n  }, \"In Stock\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 17\n    }\n  }, \"Current Amount: 30\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 17\n    }\n  }, \"Amount to order next time: 10\")), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }\n  }));\n}\n\nexport default Cakes;","map":{"version":3,"sources":["C:/Users/victo/workspace/final_stock_bot/AIT_Advanced_Studio_Project/src/components/pages/IngredientPage/Cakes.js"],"names":["React","useState","useEffect","NavbarLoggedIn","LineChart","XAxis","Tooltip","Line","CartesianGrid","ResponsiveContainer","Cakes","predictedValue","setPredictedValue","addMilk","coffee","prompt","data","request","Request","method","headers","Headers","body","JSON","stringify","fetch","then","response","json","console","log","completeAdd","currentTime","top","right","left","bottom"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport '../../../App.css';\r\nimport NavbarLoggedIn from '../../NavbarLoggedIn';\r\nimport { LineChart, XAxis, Tooltip, Line, CartesianGrid, ResponsiveContainer } from 'recharts'\r\n\r\nfunction Cakes() {\r\n    //const [currentTime, setCurrentTime] = useState(0);\r\n    const [predictedValue, setPredictedValue] = useState(0);\r\n\r\n\r\n    // useEffect(() => {\r\n    //   fetch('http://localhost:5000/time').then(res => res.json()).then(data => {\r\n    //     setCurrentTime(data.time);\r\n    //   });\r\n    // }, []);\r\n\r\n    useEffect(() => {\r\n        addMilk();\r\n    }, []);\r\n\r\n\r\n    function addMilk() {\r\n        var coffee = prompt(\"number of cookies sold\");\r\n\r\n\r\n        let data = {\r\n            'Reference': 'coffee',\r\n            'Predict': 'cookies',\r\n            'RefSold': coffee\r\n        };\r\n        var request = new Request('http://localhost:5000/linearMonday', {\r\n            method: 'POST',\r\n            headers: new Headers({ 'Content-Type': 'application/json' }),\r\n            body: JSON.stringify(data)\r\n        });\r\n        //htmlrequest\r\n        fetch(request).then(function (response) {\r\n            response.json().then(function (data) {\r\n                console.log('helo');\r\n                console.log(data.completeAdd);\r\n                setPredictedValue(data.completeAdd);\r\n\r\n            })\r\n        })\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <NavbarLoggedIn />\r\n            <h1>Milkity Milk Milk{currentTime}</h1>\r\n            <h1>Predicted Value: {predictedValue}</h1>\r\n            <ResponsiveContainer width=\"99%\" aspect={3}>\r\n                <LineChart\r\n                    width={400}\r\n                    height={400}\r\n                    data={data}\r\n                    margin={{ top: 5, right: 20, left: 10, bottom: 5 }}\r\n                >\r\n                    <XAxis dataKey=\"name\" />\r\n                    <Tooltip />\r\n                    <CartesianGrid stroke=\"#f5f5f5\" />\r\n                    <Line type=\"monotone\" dataKey=\"uv\" stroke=\"#ff7300\" yAxisId={0} />\r\n                    <Line type=\"monotone\" dataKey=\"pv\" stroke=\"#387908\" yAxisId={1} />\r\n                </LineChart>\r\n            </ResponsiveContainer>\r\n            <div className='ingredinfo'>\r\n                <h1>In Stock</h1>\r\n                <p>Current Amount: 30</p>\r\n                <p>Amount to order next time: 10</p>\r\n\r\n            </div>\r\n            <div>\r\n\r\n            </div>\r\n        </>\r\n    );\r\n}\r\nexport default Cakes;"]},"metadata":{},"sourceType":"module"}